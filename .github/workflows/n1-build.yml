name: n1 docker OpenWrt CI
on:
  schedule:
    - cron:  0 7 * * 6
  push:
    branches:
      - master
    paths:
      - '.config.n1.docker'
      - 'n1/**'
      - '.github/workflows/n1-build.yml'
  #watch:
  #  types: [started]
env:
  SSH_ACTIONS: false
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master  
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout - clone repository
      uses: actions/checkout@v2

    - name: Install - system build dependencies
      run: |
        sudo swapoff /swapfile || echo "no /swapfile"
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc || echo "clean partly"
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -yqq install subversion build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc zip pigz
        sudo -E apt-get -yqq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Download - openwrt source download
      run: |
        git clone $REPO_URL openwrt
    
    - name: mount - link /mnt
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/staging_dir
        mkdir -p openwrt/staging_dir && ln -s /mnt/openwrt/staging_dir openwrt/staging_dir
        
    - name: Update - openwrt source update and install 
      run: |
        cd openwrt
        git clone https://github.com/kenzok8/openwrt-packages.git package/openwrt-packages
        git clone https://github.com/kenzok8/small.git package/small
        git clone https://github.com/sbwml/luci-app-alist package/alist
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Config - n1 docker openwrt build config
      run: |
        [ -e n1/diy.sh ] && mv n1/diy.sh openwrt/diy.sh
        cp .config.n1.docker openwrt/.config
        cd openwrt
        [ -e diy.sh ] && chmod +x diy.sh && bash diy.sh
        make defconfig

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true'
      
    - name: Download - openwrt build dependencies
      run: |
        cd openwrt
        make download -j8
        
    - name: Build - make openwrt source
      run: |
        cd openwrt
        make -j$(nproc)
        
    - name: Docker file - copy Docker file
      run: |
        cp openwrt/bin/targets/armvirt/64/openwrt-armvirt-64-default-rootfs.tar.gz n1
        sudo cp -r n1 /mnt
        
    - name: Image - build docker image
      run: |
        cd /mnt/n1
        sudo bash build.sh
        
    - name: Upload - push to artifact file
      uses: actions/upload-artifact@v1
      with:
        name: docker-n1
        path: /mnt/n1/opt/imgs
